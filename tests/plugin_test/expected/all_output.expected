src/000_plugins.php:4 PhanPluginInstanceOfObject Cannot call instanceof against `object`
src/000_plugins.php:4 PhanUndeclaredClassInstanceof Checking instanceof against undeclared class \object
src/000_plugins.php:10 PhanPluginDollarDollar $$ Variables are not allowed.
src/000_plugins.php:18 PhanPluginDuplicateArrayKey Duplicate/Equivalent array key literal(0) detected in array - the earlier entry will be ignored.
src/000_plugins.php:21 PhanPluginMixedKeyNoKey Should not mix array entries of the form [key => value,] with entries of the form [value,].
src/000_plugins.php:28 PhanPluginUndeclaredVariableIsset undeclared variable $foo in isset()
src/000_plugins.php:29 PhanPluginComplexVariableInIsset Unanalyzable complex variable expression in isset
src/000_plugins.php:29 PhanPluginDollarDollar $$ Variables are not allowed.
src/000_plugins.php:33 PhanPluginNonBoolBranch Non bool value evaluated in if clause
src/000_plugins.php:40 PhanPluginNonBoolInLogicalArith Non bool value in logical arithmetic
src/000_plugins.php:47 PhanPluginNumericalComparison non numerical values compared by the operators '==' or '!=='
src/000_plugins.php:49 PhanPluginNumericalComparison numerical values compared by the operators '===' or '!=='
src/000_plugins.php:55 UnusedSuppression Element \testUnusedSuppressionPlugin suppresses issue PhanParamTooFew but does not use it
src/000_plugins.php:61 PhanUnreferencedFunction Possibly zero references to function \testUnreferencedFunction
src/000_plugins.php:66 PhanUnreferencedClass Possibly zero references to class \__autoload
src/000_plugins.php:67 PhanUnreferencedConstant Possibly zero references to constant \__autoload
src/000_plugins.php:69 PhanPluginAlwaysReturnFunction Function \missingReturnType has a return type of int, but may fail to return a value
src/000_plugins.php:77 PhanPluginAlwaysReturnMethod Method \ReturnChecks::missingReturnTypeSwitch has a return type of int, but may fail to return a value
src/000_plugins.php:127 PhanTypeMismatchArgumentInternal Argument 1 (string) is int but \strlen() takes string
src/000_plugins.php:138 DemoPluginMethodName Method \TestDemoPlugin::function cannot be called `function`
src/000_plugins.php:139 DemoPluginPropertyName Property \TestDemoPlugin::property should not be called `property`
src/001_dead_code.php:8 PhanUnreferencedFunction Possibly zero references to function \duplicateFnB
src/001_dead_code.php:19 PhanUnreferencedProperty Possibly zero references to property \DuplicateClass001::static_prop2
src/001_dead_code.php:22 PhanUnreferencedProperty Possibly zero references to property \DuplicateClass001::instance_prop2
src/001_dead_code.php:25 PhanUnreferencedMethod Possibly zero references to method \DuplicateClass001::f2
src/001_dead_code.php:26 PhanUnreferencedMethod Possibly zero references to method \DuplicateClass001::f3
src/001_dead_code.php:29 PhanRedefineFunction Function duplicateFnA defined at src/001_dead_code.php:29 was previously defined at src/001_dead_code.php:4
src/001_dead_code.php:33 PhanRedefineFunction Function duplicateFnB defined at src/001_dead_code.php:33 was previously defined at src/001_dead_code.php:8
src/001_dead_code.php:33 PhanUnreferencedFunction Possibly zero references to function \duplicateFnB,1
src/001_dead_code.php:37 PhanUnreferencedConstant Possibly zero references to constant \Const1B
src/001_dead_code.php:39 PhanRedefineClass Class \DuplicateClass001 defined at src/001_dead_code.php:39 was previously defined as Class \DuplicateClass001 at src/001_dead_code.php:15
src/001_dead_code.php:41 PhanUnreferencedConstant Possibly zero references to constant \DuplicateClass001,1::D
src/001_dead_code.php:44 PhanUnreferencedProperty Possibly zero references to property \DuplicateClass001,1::static_prop2
src/001_dead_code.php:47 PhanUnreferencedProperty Possibly zero references to property \DuplicateClass001,1::instance_prop2
src/001_dead_code.php:50 PhanUnreferencedMethod Possibly zero references to method \DuplicateClass001,1::f2
src/001_dead_code.php:51 PhanUnreferencedMethod Possibly zero references to method \DuplicateClass001,1::f4
src/001_globals_type_map.php:5 PhanTypeMismatchArgumentInternal Argument 1 (numerator) is \Exception|\Throwable but \intdiv() takes int
src/001_globals_type_map.php:8 PhanTypeMismatchArgumentInternal Argument 1 (numerator) is \Error|\Throwable but \intdiv() takes int
src/001_globals_type_map.php:12 PhanTypeMismatchArgumentInternal Argument 1 (numerator) is \Exception|\Throwable but \intdiv() takes int
src/001_globals_type_map.php:15 PhanTypeMismatchArgumentInternal Argument 1 (numerator) is \Error|\Throwable but \intdiv() takes int
src/002_unreachable_code.php:5 PhanPluginUnreachableCode Unreachable statement detected
src/002_unreachable_code.php:23 PhanPluginUnreachableCode Unreachable statement detected
src/002_unreachable_code.php:25 PhanPluginUnreachableCode Unreachable statement detected
src/002_unreachable_code.php:40 PhanPluginUnreachableCode Unreachable statement detected
src/002_unreachable_code.php:64 PhanPluginUnreachableCode Unreachable statement detected
src/003_suppress_on_property.php:10 PhanPluginMixedKeyNoKey Should not mix array entries of the form [key => value,] with entries of the form [value,].
src/003_suppress_on_property.php:19 PhanPluginDuplicateArrayKey Duplicate/Equivalent array key literal('key') detected in array - the earlier entry will be ignored.
src/004_unused_suppression_plugin.php:6 UnusedSuppression Element \SuppressionTest suppresses issue PhanPluginNotARealIssue but does not use it
src/004_unused_suppression_plugin.php:11 UnusedSuppression Element \SuppressionTest::foo suppresses issue PhanParamTooMany but does not use it
src/004_unused_suppression_plugin.php:23 UnusedSuppression Element \suppression_test_fn suppresses issue PhanParamTooFew but does not use it
src/004_unused_suppression_plugin.php:27 PhanTypeMismatchArgument Argument 1 (x) is array but \SuppressionTest::bar() takes int defined at src/004_unused_suppression_plugin.php:15
src/005_always_return.php:3 PhanPluginAlwaysReturnFunction Function \test5 has a return type of ?string, but may fail to return a value
src/005_always_return.php:23 PhanPluginAlwaysReturnFunction Function \soft_non_nullable_test5 has a return type of string, but may fail to return a value
src/005_always_return.php:39 PhanPluginAlwaysReturnMethod Method \C5::test has a return type of ?string, but may fail to return a value
src/005_always_return.php:59 PhanPluginAlwaysReturnMethod Method \C5::soft_non_nullable_test5 has a return type of string, but may fail to return a value
src/006_preg_regex.php:3 PhanPluginInvalidPregRegex Call to \preg_match was passed an invalid regex '@foo': No ending delimiter '@' found
src/006_preg_regex.php:6 PhanPluginInvalidPregRegex Call to \preg_replace was passed an invalid regex '@foo(@': Compilation failed: missing ) at offset 4
src/006_preg_regex.php:13 PhanPluginInvalidPregRegex Call to \preg_replace_callback_array was passed an invalid regex '@a': No ending delimiter '@' found
src/006_preg_regex.php:15 PhanPluginInvalidPregRegex Call to \preg_replace_callback was passed an invalid regex '^a': No ending delimiter '^' found
src/006_preg_regex.php:16 PhanPluginInvalidPregRegex Call to \preg_split was passed an invalid regex '/\\s//': Unknown modifier '/'
src/006_preg_regex.php:17 PhanPluginInvalidPregRegex Call to \preg_match_all was passed an invalid regex '/\\w/i/': Unknown modifier '/'
src/006_preg_regex.php:18 PhanPluginInvalidPregRegex Call to \preg_grep was passed an invalid regex '/\\w/i/': Unknown modifier '/'
src/006_preg_regex.php:21 PhanPluginInvalidPregRegex Call to \preg_replace_callback_array was passed an invalid regex '0': Delimiter must not be alphanumeric or backslash
src/006_preg_regex.php:22 PhanPluginInvalidPregRegex Call to \preg_replace_callback_array was passed an invalid regex '0': Delimiter must not be alphanumeric or backslash
src/007_printf.php:3 PhanPluginPrintfNoArguments No format string arguments are given for "%s", consider using echo instead
src/007_printf.php:3 PhanPluginPrintfNonexistentArgument Format string "%s" refers to nonexistent argument #1 in "%s"
src/007_printf.php:4 PhanPluginPrintfNoArguments No format string arguments are given for "some literal", consider using echo instead
src/007_printf.php:6 PhanPluginPrintfNonexistentArgument Format string "%d dollars 100% down\n" refers to nonexistent argument #2 in "% d"
src/007_printf.php:6 PhanPluginPrintfNotPercent Format string "%d dollars 100% down\n" contains something that is not a percent sign, it will be treated as a format string '% d' with padding. Use %% for a literal percent sign, or '%2$ d' to be less ambiguous
src/007_printf.php:7 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args" are used
src/007_printf.php:8 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args\n" are used
src/007_printf.php:9 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args\n" are used
src/007_printf.php:10 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args\n" are used
src/007_printf.php:11 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args\n" are used
src/007_printf.php:13 PhanTypeMismatchArgumentInternal Argument 1 (format) is array but \printf() takes string
src/007_printf.php:14 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "3" are used
src/007_printf.php:14 PhanTypeMismatchArgumentInternal Argument 1 (format) is int but \printf() takes string
src/007_printf.php:16 PhanPluginPrintfNoArguments No format string arguments are given for "Hello world\n", consider using fwrite instead
src/007_printf.php:19 PhanPluginPrintfUnusedArgument Format string "Hello %10s" does not use provided argument #2
src/007_printf.php:20 PhanPluginPrintfNoArguments No format string arguments are given for "Hello %10s", consider using fwrite instead
src/007_printf.php:20 PhanPluginPrintfNonexistentArgument Format string "Hello %10s" refers to nonexistent argument #1 in "%10s"
src/007_printf.php:23 PhanPluginPrintfNoArguments No format string arguments are given for "%1$f dollars", consider using echo instead
src/007_printf.php:23 PhanPluginPrintfNonexistentArgument Format string "%1$f dollars" refers to nonexistent argument #1 in "%1$f"
src/007_printf.php:25 PhanPluginPrintfNoArguments No format string arguments are given for "%1$f dollars", consider using echo instead
src/007_printf.php:25 PhanPluginPrintfNonexistentArgument Format string "%1$f dollars" refers to nonexistent argument #1 in "%1$f"
src/007_printf.php:27 PhanPluginPrintfNoArguments No format string arguments are given for "%1$f dollars", consider using echo instead
src/007_printf.php:27 PhanPluginPrintfNonexistentArgument Format string "%1$f dollars" refers to nonexistent argument #1 in "%1$f"
src/007_printf.php:29 PhanPluginPrintfNoArguments No format string arguments are given for "%1$f dollars", consider using echo instead
src/007_printf.php:29 PhanPluginPrintfNonexistentArgument Format string "%1$f dollars" refers to nonexistent argument #1 in "%1$f"
src/007_printf.php:30 PhanPluginPrintfNoArguments No format string arguments are given for "%1$f separated dollars", consider using echo instead
src/007_printf.php:30 PhanPluginPrintfNonexistentArgument Format string "%1$f separated dollars" refers to nonexistent argument #1 in "%1$f"
src/007_printf.php:32 PhanPluginPrintfIncompatibleSpecifier Format string "%1$d == %1$s: %s" refers to argument #1 in different ways: %1$d,%1$s
src/007_printf.php:32 PhanPluginPrintfUnusedArgument Format string "%1$d == %1$s: %s" does not use provided argument #2
src/007_printf.php:33 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "%1s of %2s\n" refers to argument #1 as %1s, so type string is expected. However, printf was passed the type int (which is weaker than string)
src/007_printf.php:33 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "%1s of %2s\n" refers to argument #2 as %2s, so type string is expected. However, printf was passed the type int (which is weaker than string)
src/007_printf.php:34 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "%1s of %2s" refers to argument #1 as %1s, so type string is expected. However, printf was passed the type int (which is weaker than string)
src/007_printf.php:34 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "%1s of %2s" refers to argument #2 as %2s, so type string is expected. However, printf was passed the type int (which is weaker than string)
src/007_printf.php:36 PhanPluginPrintfNoArguments No format string arguments are given for "1", consider using echo instead
src/007_printf.php:36 PhanTypeMismatchArgumentInternal Argument 1 (format) is true but \printf() takes string
src/007_printf.php:37 PhanPluginPrintfNoArguments No format string arguments are given for "", consider using echo instead
src/007_printf.php:37 PhanTypeMismatchArgumentInternal Argument 1 (format) is false but \printf() takes string
src/007_printf.php:38 PhanPluginPrintfNoArguments No format string arguments are given for "", consider using echo instead
src/007_printf.php:38 PhanTypeMismatchArgumentInternal Argument 1 (format) is null but \printf() takes string
src/007_printf.php:39 PhanPluginPrintfNoArguments No format string arguments are given for "1", consider using echo instead
src/007_printf.php:39 PhanTypeMismatchArgumentInternal Argument 1 (format) is int but \printf() takes string
src/008_printf_search.php:6 PhanPluginPrintfUnusedArgument Format string "class const: %1$d of 2" does not use provided argument #2
src/008_printf_search.php:13 PhanPluginPrintfNoArguments No format string arguments are given for "%s", consider using echo instead
src/008_printf_search.php:13 PhanPluginPrintfNonexistentArgument Format string "%s" refers to nonexistent argument #1 in "%s"
src/008_printf_search.php:15 PhanPluginPrintfUnusedArgument Format string "global const Hello, %s" does not use provided argument #2
src/008_printf_search.php:16 PhanPluginPrintfNoArguments No format string arguments are given for "global const Hello, %s", consider using echo instead
src/008_printf_search.php:16 PhanPluginPrintfNonexistentArgument Format string "global const Hello, %s" refers to nonexistent argument #1 in "%s"
src/009_vprintf.php:6 PhanPluginPrintfNoArguments No format string arguments are given for "%s", consider using fwrite instead
src/009_vprintf.php:6 PhanPluginPrintfNonexistentArgument Format string "%s" refers to nonexistent argument #1 in "%s"
src/009_vprintf.php:7 PhanPluginPrintfNoArguments No format string arguments are given for "some literal", consider using echo instead
src/009_vprintf.php:9 PhanPluginPrintfNonexistentArgument Format string "%d dollars 100% down\n" refers to nonexistent argument #2 in "% d"
src/009_vprintf.php:9 PhanPluginPrintfNotPercent Format string "%d dollars 100% down\n" contains something that is not a percent sign, it will be treated as a format string '% d' with padding. Use %% for a literal percent sign, or '%2$ d' to be less ambiguous
src/009_vprintf.php:10 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args" are used
src/009_vprintf.php:11 PhanPluginPrintfNoSpecifiers None of the formatting arguments passed alongside format string "Not using args" are used
src/009_vprintf.php:12 PhanPluginPrintfUnusedArgument Format string "Not using %d\n args\n" does not use provided argument #2
src/009_vprintf.php:14 PhanTypeMismatchArgumentInternal Argument 1 (format) is array but \vprintf() takes string
src/009_vprintf.php:14 PhanTypeMismatchArgumentInternal Argument 2 (args) is int but \vprintf() takes array
src/009_vprintf.php:16 PhanPluginPrintfNoArguments No format string arguments are given for "Hello world\n", consider using fwrite instead
src/009_vprintf.php:18 PhanTypeMismatchArgumentInternal Argument 3 (args) is string but \vfprintf() takes array
src/009_vprintf.php:19 PhanTypeMismatchArgumentInternal Argument 3 (args) is true but \vfprintf() takes array
src/010_printf_types.php:7 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "Hello, %s" refers to argument #1 as %s, so type string is expected. However, printf was passed the type float (which is weaker than string)
src/010_printf_types.php:8 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "Hello, %s" refers to argument #1 as %s, so type string is expected. However, printf was passed the type int (which is weaker than string)
src/010_printf_types.php:9 PhanPluginPrintfIncompatibleArgumentType Format string "Hello, %s" refers to argument #1 as %s, so type string is expected, but printf was passed incompatible type ?int
src/010_printf_types.php:9 PhanTypeMismatchArgumentInternal Argument 2 (args) is ?int but \printf() takes float|int|string
src/010_printf_types.php:10 PhanPluginPrintfIncompatibleArgumentType Format string "Hello, %s" refers to argument #1 as %s, so type string is expected, but printf was passed incompatible type false
src/010_printf_types.php:10 PhanTypeMismatchArgumentInternal Argument 2 (args) is false but \printf() takes float|int|string
src/010_printf_types.php:11 PhanPluginPrintfIncompatibleArgumentType Format string "Hello, %s" refers to argument #1 as %s, so type string is expected, but printf was passed incompatible type array
src/010_printf_types.php:11 PhanTypeMismatchArgumentInternal Argument 2 (args) is array but \printf() takes float|int|string
src/010_printf_types.php:12 PhanPluginPrintfIncompatibleArgumentTypeWeak Format string "Hello, %f %s" refers to argument #2 as %s, so type string is expected. However, printf was passed the type int (which is weaker than string)
src/010_printf_types.php:12 PhanPluginPrintfIncompatibleArgumentType Format string "Hello, %f %s" refers to argument #1 as %f, so type float is expected, but printf was passed incompatible type string
src/010_printf_types.php:13 PhanPluginPrintfIncompatibleArgumentType Format string "Hello, %1$d %1$f" refers to argument #1 as %1$d,%1$f, so type float|int is expected, but printf was passed incompatible type string
src/010_printf_types.php:13 PhanPluginPrintfIncompatibleSpecifier Format string "Hello, %1$d %1$f" refers to argument #1 in different ways: %1$d,%1$f
