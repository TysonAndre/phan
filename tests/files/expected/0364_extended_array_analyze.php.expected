%s:8 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:9 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:10 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:11 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:13 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:14 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:15 PhanTypeMismatchArgumentReal Argument 1 ($x) is int|null|string but \p364() takes \stdClass defined at %s:45
%s:16 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:17 PhanTypeMismatchArgument Argument 1 ($x) is false|float but \p364() takes \stdClass defined at %s:45
%s:18 PhanTypeMismatchArgumentReal Argument 1 ($x) is array<string,int> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:19 PhanTypeMismatchArgumentReal Argument 1 ($x) is array<string,\stdClass> (real type ?associative-array<mixed,mixed>|?false) but \p364() takes \stdClass defined at %s:45
%s:20 PhanTypeMismatchArgumentReal Argument 1 ($x) is array<string,array{0:2}> (real type ?associative-array<mixed,mixed>|?false) but \p364() takes \stdClass defined at %s:45
%s:21 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,string> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:22 PhanTypeMismatchArgumentReal Argument 1 ($x) is 5[] but \p364() takes \stdClass defined at %s:45
%s:23 PhanTypeMismatchArgumentReal Argument 1 ($x) is array<int,4.3> but \p364() takes \stdClass defined at %s:45
%s:24 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,float> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:25 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,float> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:26 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,float> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:27 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,float> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:28 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,float> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:29 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,float> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:30 PhanTypeMismatchArgumentReal Argument 1 ($x) is list<int>|list<string> but \p364() takes \stdClass defined at %s:45
%s:31 PhanTypeMismatchArgumentReal Argument 1 ($x) is list<int>|list<string> but \p364() takes \stdClass defined at %s:45
%s:32 PhanTypeMismatchArgumentReal Argument 1 ($x) is array<int,'val'>|array{0:2,1:4} (real type ?array) but \p364() takes \stdClass defined at %s:45
%s:33 PhanTypeMismatchArgumentReal Argument 1 ($x) is list<int>|list<string> but \p364() takes \stdClass defined at %s:45
%s:34 PhanTypeMismatchArgumentReal Argument 1 ($x) is list<int>|list<string> but \p364() takes \stdClass defined at %s:45
%s:35 PhanTypeMismatchArgumentReal Argument 1 ($x) is list<\stdClass> but \p364() takes \stdClass defined at %s:45
%s:36 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,\stdClass> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:37 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,\stdClass> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:38 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,\stdClass> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:39 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,string> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:40 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,string> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:41 PhanParamTypeMismatch Argument 3 is Closure(mixed,mixed):(-1|0|1) but \array_uintersect_assoc() takes array
%s:41 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,string> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:42 PhanTypeMismatchArgumentReal Argument 1 ($x) is associative-array<int,string> (real type ?associative-array<mixed,mixed>) but \p364() takes \stdClass defined at %s:45
%s:50 PhanTypeNonVarReturnByRef Only variables can be returned by reference in \get_array_by_ref364()
