%s:64 PhanTypeExpectedObjectPropAccess Expected an object instance when accessing an instance property, but saw an expression $l->details with type string
%s:65 PhanTypeSuspiciousEcho Suspicious argument $l->value of type \stdClass for an echo/print statement
%s:66 PhanTypeSuspiciousEcho Suspicious argument $l2->value of type \ArrayObject for an echo/print statement
%s:69 PhanTypeMismatchArgument Argument 1 ($v) is new ArrayObject() of type \ArrayAccess|\ArrayObject|\Countable|\IteratorAggregate|\Serializable|\Traversable|iterable but \SingletonList::hasValue() takes \stdClass defined at %s:37
%s:71 PhanTypeMismatchArgument Argument 1 ($p1) is new ArrayObject() of type \ArrayAccess|\ArrayObject|\Countable|\IteratorAggregate|\Serializable|\Traversable|iterable but \SingletonList::hasValueMagic() takes \stdClass defined at %s:7
%s:73 PhanTypeMismatchArgumentInternalProbablyReal Argument 1 ($string) is $l->toArray() of type array<int,\stdClass> (real type array) but \strlen() takes string
%s:74 PhanTypeMismatchArgumentInternalProbablyReal Argument 1 ($string) is $l2->toArray() of type array<int,\ArrayAccess>|array<int,\ArrayObject>|array<int,\Countable>|array<int,\IteratorAggregate>|array<int,\Serializable>|array<int,\Traversable>|array<int,iterable> (real type array) but \strlen() takes string
%s:77 PhanTypeMismatchArgument Argument 1 ($v) is $o of type \stdClass but \NodeSingletonList::hasValue() takes \ast\Node defined at %s:37
